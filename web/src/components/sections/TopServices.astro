---
import { urlForImage } from '../../lib/urlForImage'
import Button from '../Button.astro'
import Tag from '../type/Tag.astro'
const { services } = Astro.props

const topServices = services.slice(0, 4)

let allBgUrls = []

topServices.forEach((service) => {
	allBgUrls.push(`url(${urlForImage(service.image).format('webp').url()})`)
})
---

<section id="top-services" class="top-services">
	<div class="wrapper">
		<div class="title">
			<Tag text="SERVICES" variant="centered" color="black" />
			<h2>Our Top Services</h2>
			<p>
				From commercial render cleaning to full roof restoration, our top services exemplify the
				precision and care Soft Wash Solutions is known for.
			</p>
		</div>
		<div class="services">
			{
				topServices.map((service, index) => (
					<div class="mask">
						<div class="card">
							<div
								class="background"
								style={{
									backgroundImage: `linear-gradient(#0303037c, #0303037c),${allBgUrls[index]}`
								}}
							/>
							<div class="title">
								<h4>{service.title}</h4>
								<Button text="View all services" variant="white-full" />
							</div>
						</div>
					</div>
				))
			}
		</div>
	</div>
</section>
<script>
	import { gsap } from 'gsap'
	import { ScrollTrigger } from 'gsap/ScrollTrigger'
	gsap.registerPlugin(ScrollTrigger)

	gsap.to('.top-services .mask', {
		scrollTrigger: {
			trigger: '.top-services .mask',
			start: 'top 80%',
			toggleActions: 'play none none reverse'
		},
		x: 0,
		opacity: 1,
		ease: 'power1.inOut',
		stagger: 0.2
	})

	gsap.to('.top-services .title h2, .top-services .title > p, .top-services .title .tag', {
		scrollTrigger: {
			trigger: '.three-icon-cards-section .title h2',
			start: 'top 80%',
			toggleActions: 'play none none reverse'
		},
		y: 0,
		opacity: 1,
		ease: 'power1.inOut',
		stagger: 0.2
	})
</script>

<style is:global lang="scss">
	.top-services {
		.wrapper {
			@media (max-width: 700px) {
				padding-block-end: 0;
			}
			.title {
				display: flex;
				flex-direction: column;
				align-items: center;
				margin-block: 0 4rem;

				h2 {
					transform: translateY(2rem);
					opacity: 0;
				}
				.tag {
					transform: translateY(2rem);
					opacity: 0;
				}

				& > p {
					max-width: 40ch;
					margin-block: 1.5rem 0;
					text-align: center;
					color: $black;
					transform: translateY(2rem);
					opacity: 0;
				}
			}
			.services {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
				gap: 2rem;
				.mask {
					overflow: hidden;
					transform: translateX(-4rem);
					opacity: 0;

					.card {
						padding: 18rem 2rem 2rem 2rem;

						@media (max-width: 700px) {
							padding-inline: 1.5rem;
						}
						display: flex;
						align-items: flex-end;
						position: relative;
						overflow: hidden;
						.background {
							position: absolute;
							top: 0;
							right: 0;
							bottom: 0;
							left: 0;
							background-repeat: no-repeat;
							background-size: cover;
							z-index: -1;
							transition: transform 0.3s ease-in-out;
						}
						&:hover {
							.background {
								transform: scale(1.05);
							}
						}

						.title {
							display: flex;
							flex-direction: column;
							align-items: flex-start;
							gap: 1rem;
							align-self: flex-end;
							margin: 0;
							transition: transform 0.3s ease-in-out;

							h4 {
								color: $white;
								max-width: 12ch;
								font-size: $h4;
							}
							p {
								color: $white;
							}
						}
					}
				}
			}
		}
	}
</style>
