---
import { urlForImage } from '../lib/urlForImage'
import Button from './Button.astro'
const { services } = Astro.props

let n = services.length
---

<section class="services-list-section">
	<div class="wrapper">
		<div class="services-list">
			{
				services.map((service, index) => (
					<div class="service-item">
						<div class="column">
							<h3>0{index + 1}</h3>
						</div>
						<div class="column">
							<h3>{service.title}</h3>
							<p>{service.text}</p>
							<Button variant="green" text="Book now" />
						</div>
						<div class="column">
							{service.image ? (
								<img
									src={urlForImage(service.image).fit('crop').url()}
									alt={service.image.alt}
									style={
										service.image.hotspot
											? `object-position: ${service.image.hotspot.x * 100}% ${
													service.image.hotspot.y * 100
												}%;`
											: ''
									}
								/>
							) : null}
							<div class="after" />
						</div>
					</div>
				))
			}
		</div>
	</div>
</section>

<script>
	import { gsap } from 'gsap'
	import { ScrollTrigger } from 'gsap/ScrollTrigger'
	gsap.registerPlugin(ScrollTrigger)

	const allServiceItems = document.querySelectorAll('.service-item')

	allServiceItems.forEach((item) => {
		const servicesTimeline = gsap.timeline({
			scrollTrigger: {
				trigger: item,
				start: 'top 60%',
				toggleActions: 'play none none reverse'
			}
		})
		const columnsNotLast = item.querySelectorAll('.column:not(:last-child)')
		const lastColumn = item.querySelector('.column:last-child img')
		const lastColumnAfter = item.querySelector('.column:last-child .after')
		servicesTimeline
			.to(columnsNotLast, {
				y: 0,
				opacity: 1,
				stagger: 0.2
			})
			.to(
				lastColumn,

				{
					clipPath: ' polygon(0 0, 99.9% 0, 99.9% 100%, 0% 100%)'
				},
				'-=0.1'
			)
			.to(
				lastColumnAfter,
				{
					clipPath: ' polygon(0 0, 99.9% 0, 99.9% 100%, 0% 100%)',
					ease: 'power1.ease'
				},
				'-=0.5'
			)
			.to(lastColumnAfter, {
				clipPath: ' polygon(100% 0, 100% 0, 100% 100%, 100% 100%)',
				ease: 'power1.ease'
			})
	})
</script>

<style lang="scss">
	.services-list-section {
		.wrapper {
			@media (max-width: 700px) {
				padding-block-start: 0;
			}
			.title {
				width: 100%;
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: center;

				h1 {
					max-width: 18ch;
					color: $black;
					margin-block: 0.5rem 1.5rem;
				}

				p {
					color: $black;
					max-width: 50ch;
					text-align: center;
				}
			}
			.services-list {
				.service-item {
					display: grid;
					grid-template-columns: 0.5fr 1fr 1fr 1fr;
					gap: 2rem;
					padding-block: 4rem;
					overflow: hidden;

					&:not(:last-child) {
						border-block-end: 0.5px solid $black;
					}

					.column {
						h3 {
							max-width: 12ch;
						}
						p {
							color: $black;
							margin-block: 1rem 1.5rem;
						}
						&:last-child {
							grid-column: span 2;
							position: relative;
							border-radius: 0.5rem;
							display: flex;
							overflow: hidden;
							height: clamp(350px, 100%, 400px);
							// height: 100%;

							.after {
								position: absolute;
								content: '';
								display: grid;
								width: 100%;
								background-color: $green;
								z-index: 10;
								inset: 0;
								clip-path: polygon(0 0, 0 0, 0 100%, 0% 100%);
								height: 100%;

								@keyframes clip-path-animation {
									0% {
										clip-path: polygon(0 0, 0 0, 0 100%, 0% 100%);
									}
									50% {
										clip-path: polygon(0 0, 99.99% 0, 99.99% 100%, 0% 100%);
									}
									100% {
										clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
									}
								}
								&.animate {
									animation: clip-path-animation 600ms forwards ease-in-out;
								}

								h2 {
									color: $white;
								}
							}
							img {
								height: 100%;
								object-fit: cover;
								clip-path: polygon(0 0, 0 0, 0 100%, 0% 100%);
							}
						}
						&:not(:last-child) {
							transform: translateY(4rem);
							opacity: 0;
						}
					}
				}
			}
		}
		@media (max-width: 900px) {
			.wrapper {
				.title {
					flex-direction: column;
					align-items: flex-start;
					gap: 1.5rem;

					p {
						width: 100%;
					}
				}
				.services-list {
					.service-item {
						grid-template-columns: 1fr 1fr 1fr;
						.column {
							&:last-child {
								grid-row: 1 / span 2;
								height: 100%;

								img {
									// height: 350px !important;
								}
								grid-column: 2 / span 2;
							}
						}
					}
				}
			}
		}

		@media (max-width: 600px) {
			.wrapper {
				.services-list {
					.service-item {
						grid-template-columns: 1fr 2fr;
						.column {
							&:last-child {
								grid-row: 1 / span 2;

								grid-column: 1 / span 2;
							}
						}
					}
				}
			}
		}
	}
</style>
