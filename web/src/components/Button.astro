---
const { text, to = '/#contact', variant, ...props } = Astro.props
---

<a href={to}>
	<button {...props} class={variant}>
		{text}
	</button>
	{
		variant === 'green' || variant === 'white-full' ? (
			<div class="button-icon green">
				<img src="/svg/svg-arrow.svg" alt="Button Icon" />
			</div>
		) : (
			<div class="button-icon white">
				<img src="/svg/svg-arrow-green.svg" alt="Button Icon" />
			</div>
		)
	}
</a>

<style lang="scss">
	a {
		display: flex;
		align-items: center;
		&:hover {
			.button-icon {
				scale: 0.95;
				transition: 300ms scale ease;
			}
			button {
				&.white {
					background-color: $white;
					color: $green;
				}
			}
		}
		.button-icon {
			width: 3rem;
			height: 3rem;
			background-color: $green;
			padding: 0.75rem;
			border-radius: 50%;
			display: grid;
			place-content: center;
			transform: translateX(-25%);
			transition: 300ms scale ease;
			aspect-ratio: 1;

			img {
				width: 2rem;
			}
			&.white {
				background-color: $white;
			}
		}
		button {
			padding: 0.75rem 2rem;
			cursor: pointer;
			border-radius: 4rem;
			background-color: transparent;
			line-height: 1.2;

			&.white {
				border: 1px solid $white;
				background-color: transparent;
				color: $white;
				transition:
					background-color 0.3s ease-in-out,
					color 0.3s ease-in-out;
			}
			&.white-full {
				border: 1px solid $white;
				background-color: $white;
				color: $green;
				transition:
					background-color 0.3s ease-in-out,
					color 0.3s ease-in-out;
				&:hover {
					border: 1px solid $white;
					background-color: transparent;
					color: $white;
					transition:
						background-color 0.3s ease-in-out,
						color 0.3s ease-in-out;
				}
			}
			&.green {
				border: 1px solid $green;
				color: $green;
				background-color: transparent;
				transition:
					background-color 0.3s ease-in-out,
					color 0.3s ease-in-out;
			}
		}
	}
</style>
